<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<!-- <bean id="StatFilter" class="com.alibaba.druid.filter.stat.StatFilter" 
		/> -->
	<!-- <bean id="logFilter" class="com.alibaba.druid.filter.logging.Log4jFilter" 
		/> -->

	<!--指定Spring配置中用到的属性文件 -->
	<!-- <bean id="propertyConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> 
		<property name="locations"> <list> <value>classpath:jdbc.properties</value> 
		</list> </property> </bean> -->

	<bean id="SDS" class="com.atomikos.jdbc.AtomikosDataSourceBean"
		destroy-method="close">
		<property name="uniqueResourceName">
			<value>mysql/test</value>
		</property>
		<property name="xaDataSourceClassName">
			<value>com.mysql.jdbc.jdbc2.optional.MysqlXADataSource</value>
		</property>
		<property name="testQuery">
			<value>SELECT 1</value>
		</property>
		<property name="xaProperties">
			<props>
				<prop key="user">test</prop>
				<prop key="password">test</prop>
				<prop key="URL">jdbc:mysql://127.0.0.1:3306/test</prop>
			</props>
		</property>
		<property name="minPoolSize">
			<value>3</value>
		</property>
		<property name="maxPoolSize">
			<value>10</value>
		</property>
	</bean>

	<bean id="SDS2" class="com.atomikos.jdbc.AtomikosDataSourceBean"
		destroy-method="close">
		<property name="uniqueResourceName">
			<value>mysql/answer_me</value>
		</property>
		<property name="xaDataSourceClassName">
			<value>com.mysql.jdbc.jdbc2.optional.MysqlXADataSource</value>
		</property>
		<property name="testQuery">
			<value>SELECT 1</value>
		</property>
		<property name="xaProperties">
			<props>
				<prop key="user">answer</prop>
				<prop key="password">answer</prop>
				<prop key="URL">jdbc:mysql://127.0.0.1:3306/answer_me</prop>
			</props>
		</property>
		<property name="minPoolSize">
			<value>3</value>
		</property>
		<property name="maxPoolSize">
			<value>10</value>
		</property>

	</bean>


	<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"
		init-method="init" destroy-method="close">
		<!-- when close is called, should we force transactions to terminate or 
			not? -->
		<property name="forceShutdown">
			<value>false</value>
		</property>
	</bean>

	<!-- Also use Atomikos UserTransactionImp, needed to configure Spring -->
	<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
		<property name="transactionTimeout">
			<value>300</value>
		</property>
	</bean>

	<!-- Configure the Spring framework to use JTA transactions from Atomikos -->
	<bean id="springJTATransactionManager"
		class="org.springframework.transaction.jta.JtaTransactionManager">

		<property name="transactionManager">
			<ref bean="atomikosTransactionManager" />
		</property>
		<property name="userTransaction">
			<ref bean="atomikosUserTransaction" />
		</property>
	</bean>

	<!-- 定义事务规则的拦截器 -->
	<bean id="transactionInterceptor"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="springJTATransactionManager" />
		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_REQUIRED,-Exception</prop>
			</props>
		</property>
	</bean>

	<bean
		class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="beanNames">
			<list>
				<value>*SV</value>
			</list>
		</property>
		<property name="interceptorNames">
			<list>
				<value>transactionInterceptor</value>
			</list>
		</property>
	</bean>


	<bean id="jdbcTemplateA" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="SDS" />
	</bean>

	<bean id="jdbcTemplateB" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="SDS2" />
	</bean>

</beans>
